#!/bin/bash
# install requirements
sudo sysctl -w net.ipv4.ip_forward=1
sudo sysctl -p
sudo yum update -y && sudo yum install curl -y
sudo amazon-linux-extras install epel -y
yes Y|sudo yum install epel-release -y
sudo curl -Lo /etc/yum.repos.d/wireguard.repo https://copr.fedorainfracloud.org/coprs/jdoss/wireguard/repo/epel-7/jdoss-wireguard-epel-7.repo
sudo yum update -y && sudo yum install wireguard-dkms wireguard-tools qrencode -y

# configure wg
sudo mkdir -p /etc/wireguard
wg genkey | sudo tee /etc/wireguard/privatekey | wg pubkey | sudo tee /etc/wireguard/publickey
PRIVKEY=`sudo cat /etc/wireguard/privatekey`
PUBKEY=`sudo cat /etc/wireguard/publickey`
NAMESERVER=`cat /etc/resolv.conf|grep nameserver|cut -d " " -f 2`
SERVERIP=`curl ifconfig.me`

sudo cp /home/ec2-user/wg-generator/wg_conf /etc/wireguard/wg0.conf
sudo sed -i "s|PRIVKEY|${PRIVKEY}|g" /etc/wireguard/wg0.conf

# run initial user creation
sudo cp /home/ec2-user/wg-generator/initial /etc/wireguard/
sudo chmod +x /etc/wireguard/initial

sudo cp /home/ec2-user/wg-generator/new /etc/wireguard/
sudo chmod +x /etc/wireguard/new

sudo cp /home/ec2-user/wg-generator/template /etc/wireguard
sudo cp /home/ec2-user/wg-generator/users.txt /etc/wireguard
sudo sed -i "s|pubkey|${PUBKEY}|g" /etc/wireguard/template
sudo sed -i "s|serverip|${SERVERIP}|g" /etc/wireguard/template
sudo sed -i "s|nameserver|${NAMESERVER}|g" /etc/wireguard/template

sudo cd /etc/wireguard
sudo /bin/bash -x /etc/wireguard/initial "$1"

# Install Docker for reverse proxy
sudo amazon-linux-extras install docker -y
sudo service docker start
sudo usermod -a -G docker ec2-user
sudo chkconfig docker on
sudo wget https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
sudo mv docker-compose-Linux-x86_64 /usr/bin/docker-compose
sudo chmod +x /usr/bin/docker-compose

mkdir -p ./caddy/config
ipaddr=`curl ifconfig.me`
cat << EOF >./caddy/config/Caddyfile
jenkins.dev-janus.com { 
    @ipfilter {
        remote_ip forwarded 127.0.0.1 216.215.101.100 10.10.130.0/24 34.198.250.84 187.190.78.151 ${ipaddr}
    }
    handle @ipfilter {
        reverse_proxy http://jenkins.janus-dev.com:8080
    }
    respond "<h1>403 forbidden</h1>"
}
EOF
# 10.10.130.0/24 -- local VPN
# 216.215.101.100 -- ARS VPN
# 34.198.250.84 -- Revelry VPN
# 187.190.78.151 -- ClickIT VPN
docker-compose up --build -d